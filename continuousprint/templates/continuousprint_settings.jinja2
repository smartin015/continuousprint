<div class="cpq_title">
  <img src="plugin/continuousprint/static/img/CPQ.svg" alt="Continuous Print">
  <div>Continuous Print Queue</div>
</div>

<script type="text/javascript">
  const CP_PRINTER_PROFILES = {{plugin_continuousprint_printer_profiles|tojson|safe}};
  const CP_GCODE_SCRIPTS = {{plugin_continuousprint_gcode_scripts|tojson|safe}};
  const CP_CUSTOM_EVENTS = {{plugin_continuousprint_custom_events|tojson|safe}};
  const CP_LOCAL_IP = {{plugin_continuousprint_local_ip|tojson|safe}};
  const CP_EXCEPTIONS = {{plugin_continuousprint_exceptions|tojson|safe}};
  const CP_SIMULATOR_DEFAULT_SYMTABLE = function() {return {{plugin_continuousprint_simulator_default_symtable|tojson|safe}}; };
</script>

<ul id="settings_continuousprint_tabs" class="nav nav-pills">
  <li class="active"><a href="#settings_continuousprint_profile" data-toggle="tab">Profile</a></li>
  <li><a href="#settings_continuousprint_events" data-toggle="tab">Events</a></li>
  <li><a href="#settings_continuousprint_scripts" data-toggle="tab">Scripts & Preprocessors</a></li>
  <li><a href="#settings_continuousprint_integrations" data-toggle="tab">Integrations</a></li>
  <li><a href="#settings_continuousprint_queues" data-toggle="tab">Queues</a></li>
  <li><a href="#settings_continuousprint_behavior" data-toggle="tab">Behavior</a></li>
  <li><a href="#settings_continuousprint_help" data-toggle="tab">Help</a></li>
</ul>
<div class="tab-content">
  <div id="settings_continuousprint_profile" class="tab-pane active">
    <form class="form-horizontal">
      <legend>Printer Profile</legend>
      <p>If you tag queue items with <a href="https://smartin015.github.io/continuousprint/printer-profiles/">profiles</a>, they will be skipped unless they match this profile.</p>
      <fieldset>
        <div class="control-group" title="The manufacturer of the printer">
          <label class="control-label">Manufacturer</label>
          <div class="controls">
            <select data-bind="foreach: printer_makes, value:selected_make">
              <option data-bind="text: $data"/>
            </select>
          </div>
        </div>
        <div class="control-group" title="The model of the printer">
          <label class="control-label">Model</label>
          <div class="controls">
            <select data-bind="foreach: printer_models, value: selected_model, event:{ change: modelChanged }">
              <option data-bind="text: $data"/>
            </select>
          </div>
        </div>
      </fieldset>

      After setting a profile, try loading community-contributed scripts on the <a style="cursor:pointer" data-bind="click: ()=>$root.gotoTab('scripts')">Scripts &amp; Preprocessors</a> section.

      <legend>Network Identity</legend>

      <p>These settings identify the printer to LAN queues and other networked printers.</p>

      <fieldset>
        <div class="control-group" title="Name of this printer when viewed from other OctoPrint instances">
          <label class="control-label">Hostname</label>
          <div class="controls">
          <textarea rows="1" data-bind="value: settings.settings.plugins.continuousprint.cp_network_name"></textarea>
          </div>
        </div>
      </fieldset>
    </form>
  </div> <!-- settings_continuousprint_profile -->


  <div id="settings_continuousprint_events" class="tab-pane">
    <form class="form-horizontal">
      <legend>Events</legend>
      <p>
        Register <a style="cursor:pointer" data-bind="click: ()=>$root.gotoTab('scripts')">Scripts &amp; Preprocessors</a> to execute on queue events.
      </p>
      <p>
        You can execute multiple scripts in sequence, dragging to change the execution order.
      </p>

      <div class="events" data-bind="foreach: events">
        <h4 data-bind="text: display"></h4>
        <p data-bind="text: desc"></p>

        <div data-bind="cpsortable: {foreach: actions, options: {handle: '.fa-grip-vertical', onStart: $root.sortStart, onEnd: $root.sortEnd}}">
          <div class="accordion-group header-row">
            <i class="fas fa-grip-vertical"></i>
            <div style="flex:1">
              <div>
              Script:
              <a style="cursor: pointer" data-bind="text: script.name, click: () => $root.gotoScript(script)"></a>
              </div>
              <div class="subheader" data-bind="text: script.preview"></div>
            </div>
            <label>
              Preprocessor<sup><a href="https://smartin015.github.io/continuousprint/gcode-scripting/#preprocessors" target="_blank">?</a></sup>:
              <select style="flex: 1" data-bind="
                  value: preprocessor,
                  options: $root.preprocessorSelectOptions,
                  optionsText: 'name',
                  optionsValue: 'value',
                  event: {change: $root.actionPreprocessorChanged}
              ">
              </select>
            </label>
            <div style="width: 30px" data-bind="click: (v) => $root.rmAction($parent, v)"><i class="far fa-trash-alt"></i></div>
          </div>
        </div> <!-- foreach actions -->

        <div class="simulation">
        <div data-bind="text: JSON.stringify(simulation())"></div>
        </div>

        <div class="dropdown pull-right" style="width: 120px">
          <a class="btn dropdown-toggle" data-toggle="dropdown">
            Add script
            <i style="cursor: pointer" class="fa fa-caret-down"></i>
          </a>
          <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">
            <!-- ko foreach: $root.scripts -->
              <li data-bind="visible: $parent.actions.indexOf(name()) === -1"><a tabindex="-1" data-bind="text: name, click: (v) => $root.addAction($parent, v)"></a></li>
            <!-- /ko -->
            <li><a data-bind="click: () => $root.addAction($data, null)">New Script...</a></li>
          </ul>
        </div>
      </div> <!-- foreach events -->
    </form>
  </div> <!-- settings_continuousprint_events -->

  <div id="settings_continuousprint_scripts" class="tab-pane">
    <form class="form-horizontal">
      <legend>Scripts</legend>
      <p>
        <strong>Scripts</strong> are made with GCODE and are attached to <a style="cursor:pointer" data-bind="click: ()=>$root.gotoTab('events')">Events</a> to run whenever that event occurs.
      </p>
      <p>
      For examples and best practices, see the <a href="https://smartin015.github.io/continuousprint/gcode-scripting/" target="_blank">GCODE scripting guide</a>.
      </p>

      <div class="alert alert-error" data-bind="hidden: allUniqueScriptNames">
        <p>
        <i class="fas fa-exclamation-circle"></i> Two or more scripts have the same name.
        </p>
        <p>
          All scripts must have a unique name for the configuration to be valid.
        </p>
      </div>

      <div class="scripts accordion" data-bind="foreach: scripts">
        <div class="accordion-group">
          <div class="accordion-heading header-row">
            <i data-bind="css: !expanded() ? 'fas fa-edit' : '', click: () => expanded(true)"></i>
            <div style="flex: 1">
              <div data-bind="hidden: expanded">
                <div data-bind="text: name"></div>
                <div class="subheader" data-bind="visible: registrations().length > 0">Fires on <span data-bind="text: registrations().join(', ')"></span></div>
              </div>
              <div data-bind="visible: expanded">
                <input type="text" placeholder="Script Name" data-bind="value: name"></input>
              </div>
            </div>
            <div style="width: 30px">
              <div data-bind="click: $root.downloadScript" title="Download"><i class="fa fa-download"></i></div>
            </div>
            <div style="width: 30px">
              <div data-bind="click: $root.rmScript" title="Delete"><i class="far fa-trash-alt"></i></div>
            </div>
          </div>
          <div class="accordion-body collapse" data-bind="css: expanded() ? 'in' : 'out'">
            <div class="accordion-inner">
              <textarea placeholder="GCODE goes here" rows="8" class="input-block-level" data-bind="value: body"></textarea>
              <button class="btn btn-primary pull-right" data-bind="click: () => expanded(false)">Done</button>
            </div>
          </div>
        </div>
      </div> <!-- foreach scripts -->

      <div style="text-align: right">
        <button class="btn" data-bind="click: loadScriptsFromProfile" title="Load user-contributed scripts based on your printer profile">
          <i style="cursor:pointer" class="fa fa-file-import"></i>&nbsp;Import Defaults from Current Profile
        </button>

        <label class="btn">
          <input style="display: none" name="files[]" type="file" data-bind="event: {change: () => { loadScriptFromFile($element.files[0]) }}"/>
          <i class="fa fa-upload"></i>&nbsp;Upload File
        </label>

        <button class="btn" data-bind="click: () => addScript()" title="Create a new script">
          <i style="cursor:pointer" class="fas fa-plus"></i>&nbsp;New Script
        </button>
      </div>

      <legend>Preprocessors</legend>
      <p>
        <strong>Preprocessors</strong> are optional Python-like expressions that change the behavior of Scripts assigned in the <a style="cursor:pointer" data-bind="click: ()=>$root.gotoTab('events')">Events</a> tab. Use these to add special running conditions or to inject dynamic values into your scripts.
      </p>
      <p>
      For examples and best practices, see the <a href="https://smartin015.github.io/continuousprint/gcode-scripting/" target="_blank">scripting guide</a>.
      </p>

      <div class="alert alert-error" data-bind="hidden: allUniquePreprocessorNames">
        <p>
        <i class="fas fa-exclamation-circle"></i> Two or more preprocessors have the same name.
        </p>
        <p>
          All preprocessors must have a unique name for the configuration to be valid.
        </p>
      </div>

      <div class="scripts accordion" data-bind="foreach: preprocessors">
        <div class="accordion-group">
          <div class="accordion-heading header-row">
            <i data-bind="css: !expanded() ? 'fas fa-edit' : '', click: () => expanded(true)"></i>
            <div style="flex: 1">
              <div data-bind="hidden: expanded">
                <div data-bind="text: name"></div>
                <div class="subheader" data-bind="visible: registrations().length > 0">Fires on <span data-bind="text: registrations().join(', ')"></span></div>
              </div>
              <div data-bind="visible: expanded">
                <input placeholder="Preprocessor name" type="text" data-bind="value: name"></input>
              </div>
            </div>
            <div style="width: 30px">
              <div data-bind="click: $root.downloadPreprocessor" title="Download"><i class="fa fa-download"></i></div>
            </div>
            <div style="width: 30px">
              <div data-bind="click: $root.rmPreprocessor" title="Delete"><i class="far fa-trash-alt"></i></div>
            </div>
          </div>
          <div class="accordion-body collapse" data-bind="css: expanded() ? 'in' : 'out'">
            <div class="accordion-inner">
              <textarea placeholder="Pythonic code goes here" rows="8" class="input-block-level" data-bind="value: body"></textarea>
              <button class="btn btn-primary pull-right" data-bind="click: () => expanded(false)">Done</button>
            </div>
          </div>
        </div>
      </div> <!-- foreach preprocessors -->

      <div style="text-align: right">
        <label class="btn">
          <input style="display: none" name="files[]" type="file" data-bind="event: {change: () => { loadPreprocessorFromFile($element.files[0]) }}"/>
          <i class="fa fa-upload"></i>&nbsp;Upload File
        </label>

        <button class="btn" data-bind="click: () => addPreprocessor()" title="Create a new Preprocessor">
          <i style="cursor:pointer" class="fas fa-plus"></i>&nbsp;New Preprocessor
        </button>
      </div>
    </form>
  </div> <!-- /settings_continuousprint_scripts -->

  <div id="settings_continuousprint_integrations" class="tab-pane">
    <form class="form-horizontal">
      <fieldset>
        <legend>Failure Recovery</legend>
        <div class="alert alert-info" data-bind="hidden: settings.settings.plugins.continuousprint.cp_restart_on_pause_enabled">
          <p><strong>Plugin Needed:</strong> Failure recovery requires <a href="https://www.obico.io/" target="_blank">Obico</a> version &geq; 1.8.11, but the plugin does not appear to be installed.<p>
          <p>Read more about how to set this up in the <a href="https://smartin015.github.io/continuousprint/failure-recovery/" target="_blank">Failure Recovery guide</a>.</p>
        </div>
        <div data-bind="visible: settings.settings.plugins.continuousprint.cp_restart_on_pause_enabled">
          <p>
            Failure recovery is enabled because <a href="https://www.obico.io/" target="_blank">Obico</a> is installed.
          </p>
          <p>
            Read more about failure recovery settings in the <a href="https://smartin015.github.io/continuousprint/failure-recovery/" target="_blank">Failure Recovery guide</a>.
          </p>
          <div class="control-group">
            <label class="control-label">Retry if started less than</label>
            <div class="controls">
              <div class="input-append">
                <input type="number" step="any" min="0" class="input-mini text-right" data-bind="value: settings.settings.plugins.continuousprint.cp_restart_on_pause_max_seconds"/>
                <span class="add-on">seconds ago</span>
              </div>
            </div>
          </div>
          <div class="control-group">
            <label class="control-label">Stop the queue after</label>
            <div class="controls">
              <div class="input-append">
                <input type="number" step="any" min="0" class="input-mini text-right" data-bind="value: settings.settings.plugins.continuousprint.cp_restart_on_pause_max_restarts"/>
                <span class="add-on">retries</span>
              </div>
            </div>
          </div>
        </div>
      </fieldset>

      <fieldset>
        <legend>Material Selection</legend>
        <div class="alert alert-info" data-bind="hidden: settings.settings.plugins.continuousprint.cp_material_selection_enabled">
          <p><strong>Plugin Needed:</strong> Material selection requires <a href="https://plugins.octoprint.org/plugins/SpoolManager/" target="_blank">SpoolManager</a>, but the plugin does not appear to be installed or enabled.<p>
          <p>Read more about this feature in the <a href="https://smartin015.github.io/continuousprint/material-selection/" target="_blank">Material Selection guide</a>.</p>
        </div>
        <div data-bind="visible: settings.settings.plugins.continuousprint.cp_material_selection_enabled">
          <p>
            Material selection is enabled because <a href="https://plugins.octoprint.org/plugins/SpoolManager/" target="_blank">SpoolManager</a> is installed and enabled.
          </p>
          <p>
            Read more about material selection in the <a href="https://smartin015.github.io/continuousprint/material-selection/" target="_blank">Material Selection guide</a>.
          </p>
        </div>
      </fieldset>
    </form>
  </div> <!-- continuousprint_settings_integrations -->


  <div id="settings_continuousprint_queues" class="tab-pane">
    <form class="form-horizontal">
      <legend>Queues</legend>
      <p>
        <strong>Renaming a queue will delete the original queue and create a new one</strong> - jobs will not transfer over.
      </p>
      <p>
        <strong>Changing the address of a queue requires a restart</strong> before the new address is used.
      </p>
      <p>
        Read <a href="https://smartin015.github.io/continuousprint/lan-queues/" target="_blank">this guide</a> to learn how to best configure network queues.
      </p>
      <div class="alert alert-error" data-bind="hidden: allValidQueueAddr">
        <p>
        <i class="fas fa-exclamation-circle"></i> One or more queues have an invalid address configured.
        </p>
        <p>
        All queues (other than the local queue) must have an address of "auto" or of the form <i>ip_address:port</i>, with a port value of 5000 or higher.
        </p>
      </div>
      <div class="alert alert-error" data-bind="hidden: allValidQueueNames">
        <p>
        <i class="fas fa-exclamation-circle"></i> One or more queues needs a name.
        </p>
        </div>
      <div class="queue-header">
        <div style="text-align: center; flex: 1">Name</div>
        <div style="text-align: center; width: 180px">Address:Port</div>
        <div style="text-align: center; width: 180px">Strategy</div>
        <div style="width:30px"></div>
      </div>
      <div class="queue-list" data-bind="cpsortable: {foreach: queues, options: {handle: '.fa-grip-vertical', onStart: $root.sortStart, onEnd: $root.sortEnd}}">
        <div class="queue-row-container">
            <i class="fas fa-grip-vertical"></i>
            <div style="flex:1">
            <input type="text" style="width:90%" data-bind="value: name, disable: name === 'local', event: {change: $root.queueChanged}" placeholder="e.g. LAN"></input>
            </div>
            <div style="width: 180px">
            <input type="text" style="width:90%" data-bind="value: addr, hidden: name === 'local', event: {change: $root.queueChanged}, attr: {placeholder: 'e.g. ' + $root.local_ip() + ':6789'}"></input>
            </div>
            <div style="width: 180px">
              <select data-bind="value: strategy" style="width: 100%">
                <option>In-Order</option>
              </select>
            </div>
            <div style="width: 30px">
              <div data-bind="visible: name !== 'local', click: $root.rmQueue"><i class="far fa-trash-alt"></i></div>
            </div>
        </div>
      </div>
      <button style="margin-top: 25px" class="btn pull-right" data-bind="click: newBlankQueue"><i class="fas fa-plus"></i> Add Queue</button>
    </form>
  </div> <!-- settings_continuousprint_queues -->


  <div id="settings_continuousprint_behavior" class="tab-pane">
    <form class="form-horizontal">
      <legend>Behavior</legend>
      <fieldset>
        <div class="control-group" title="What to do when a print is uploaded">
          <label class="control-label">Upload Action</label>
          <div class="controls">
            <select data-bind="value: settings.settings.plugins.continuousprint.cp_upload_action">
              <option value="do_nothing">Do nothing</option>
              <option value="add_draft">Add to queue as a new draft job</option>
              <option value="add_printable">Add to queue as an immediately printable job</option>
            </select>
          </div>
        </div>
        <div class="control-group" title="How to handle time lapses when running automation scripts">
          <label class="control-label">Clearing/Finishing Timelapses</label>
          <div class="controls">
            <select data-bind="value: settings.settings.plugins.continuousprint.cp_automation_timelapse_action">
              <option value="do_nothing">Do nothing</option>
              <option value="auto_remove">Auto-remove</option>
            </select>
          </div>
        </div>
        <div class="control-group" title="Automatically try to assign printer profiles based on .gcode file contents - this may only work for some printers / slicers">
          <label class="control-label">Auto-assign printer profiles</label>
          <div class="controls">
            <input type=checkbox data-bind="checked: settings.settings.plugins.continuousprint.cp_infer_profile">
          </div>
        </div>
        <div class="control-group" title="Attempt to reconnect if the printer goes offline - think carefully about your printer's behavior when the serial port opens before enabling this feature.">
          <label class="control-label">Auto-reconnect to printer</label>
          <div class="controls">
            <input type=checkbox data-bind="checked: settings.settings.plugins.continuousprint.cp_auto_reconnect">
          </div>
        </div>
        <div class="control-group" title="Put a newline-separated list of GCODE commands to ignore while the queue is running, e.g. 'M104 S0' to prevent gcode files from turning off the hotend. CPQ event scripts/preprocessors are unaffected. Changes take effect after restarting OctoPrint">
          <label class="control-label">Ignore GCODE lines while printing</label>
          <div class="controls">
            <textarea rows="4" data-bind="value: settings.settings.plugins.continuousprint.cp_skip_gcode_commands"></textarea>
          </div>
        </div>
      </fieldset>

      <legend>Bed Cooldown Settings</legend>
        <p>
          Some printers do not respect the <a target="_blank" href="https://marlinfw.org/docs/gcode/M190.html">M190</a> (Wait for Bed Temperature) command (see <a target="_blank" href="https://github.com/smartin015/continuousprint/issues/6">this bug</a>).
        </p>
        <p>Enable this if you use M190 commands in the <b>Clearing script</b> but your printer isn't properly waiting.</p>

        <div class="control-group" title="This enables Bed Cooldown and exposes additional config options">
            <label class="control-label">Enable Bed Cooldown</label>
            <div class="controls">
                    <input type=checkbox data-bind="checked: settings.settings.plugins.continuousprint.bed_cooldown_enabled">
            </div>
        </div>

        <div id="cooldownSettings" data-bind="visible: settings.settings.plugins.continuousprint.bed_cooldown_enabled">
            <p>
                When the print is finished, OctoPrint will fire the Bed Cooldown event (see above),
                turn the heated bed off and monitor the bed temperature.
            </p>
            <p>
                After either the <b>Bed Cooldown Threshold</b> or <b>Bed Cooldown Timeout</b> is
                met, the <b>Print Success</b> event will trigger.
            </p>

            <div class="control-group" title="Bed temperature target to reach before moving on">
                <label class="control-label">Threshold</label>
                <div class="controls">
                    <div class="input-append">
                    <input type="number" class="input-mini text-right" data-bind="value: settings.settings.plugins.continuousprint.bed_cooldown_threshold"></input>
                    <span class="add-on">°C</span>
                    </div>
                </div>
            </div>
            <div class="control-group" title="Number of seconds to wait before moving on">
                <label class="control-label">Timeout</label>
                <div class="controls">
                  <div class="input-append">
                    <input type="number" class="input-mini text-right" data-bind="value: settings.settings.plugins.continuousprint.bed_cooldown_timeout"></input>
                    <span class="add-on">min</span>
                  </div>
                </div>
            </div>
        </div>
    </form>
  </div> <!-- settings_continuousprint_behavior -->

  <div id="settings_continuousprint_help" class="tab-pane">
    <form class="form-horizontal">
      <legend>Help</legend>
      <p><strong>If you need help installing, configuring, or using Continuous Print, start by looking through the extensive <a target="_blank" href="https://smartin015.github.io/continuousprint/">documentation</a>.</strong></p>

      <legend>Report an issue</legend>
      <p>
        If you encounter errors or unexpected behavior, go to the <a target="_blank" href="https://github.com/smartin015/continuousprint/issues">GitHub issues page</a> and see if there's a similar open issue to the problem you're having.
      </p>
      <p>
        If you can't find any, <a target="_blank" href="https://github.com/smartin015/continuousprint/issues/new?assignees=&labels=bug&template=bug_report.md&title=">report a new issue</a> and <strong>make sure to include a sysinfo bundle</strong> as described in the issue text box.
      </p>

      <legend>Features and Feedback</legend>
      <p>
        Feature requests are also reported via GitHub - click <a target="_blank" href="https://github.com/smartin015/continuousprint/issues/new?assignees=&labels=&template=feature_request.md&title=">here</a> to start a new feature request.
      </p>

      <p>If you're looking to give feedback without any features in mind - for instance, if you found a useful way to use CPQ and want to share - try starting a <a target="_blank" href="https://github.com/smartin015/continuousprint/discussions">Discussion</a>.
      </p>

      <legend>Donations and Support</legend>
      <p>
        I'm a solo developer maintaining all of Continuous Print.
      </p>
      <p>
        Please help caffienate me so I can continue to fix bugs and release awesome new features!
      </p>
      <a href='https://ko-fi.com/I2I7AA4DY' target='_blank'><img height='36' style='border:0px;height:36px;' src='https://storage.ko-fi.com/cdn/kofi2.png?v=3' border='0' alt='Buy Me a Coffee at ko-fi.com' /></a>
      or
      <a class="btn btn-secondary" target="_blank" href="https://www.patreon.com/bePatron?u=13297819">Become a Patron</a>

    </form>
  </div> <!-- settings_continuousprint_help -->


</div>
